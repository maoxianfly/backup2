%title JavaScript基础语法

[[../../../index|首页]] - [[../index|HTML5]] - [[index|JavaScript]]
==JavaScript基础语法==
----
===基本规则===

局部变量使用`var`声明：`var a = 1, b = 2;`

全局变量的声明则不使用`var`：`c = 3;`

`JS`的语句不强制要求使用分号，但最好是做到每一条语句都以分号结尾

在`C/C++/Java`中，以一对大括号包围的区域就是一个独立的作用域，但在`JS`中则不然，不管有没大括号包围，作用一样

但在函数中的变量和`C/C++/Java`一致，是局部变量，外界不能访问

`JS`同时支持`C++`的行注释和多行注释，但要注意的是，`JS`的正则表达式也是双斜线的形式：`/正则表达式/`
----
===数据类型===

# 整数：`20`
# 浮点数：`0.5`
# 字符串：`"Ruchee"`或`'Ruchee'`
# 布尔值：`true`或`false`
# 空对象：`null`
# 对象：`{name: "Ruchee", age: 22}`
# 数组：`[1, 2, 3]`
# 正则表达式：`/abc/gi`

另有一个叫`undefined`的全局变量，和`null`在很多情况下等价，但并不全等
----
===运算符===

`JS`支持所有`Java`里有的常规运算符，以及其相应的复合运算符

`JS`有相等和全等两类相等性测试，相等（`==`）在比较之前会进行类型转换，而全等（`===`）则不会进行类型转换

相应的有非等（`!=`）和非全等（`!==`）

`in`操作符：判断对象中是否存在某个属性
{{{JavaScript
var me = {name: "Ruchee", age: 22};

if("name" in me){
	...
}
}}}

`instanceof`操作符：判断对象是否为某个类的实例
{{{JavaScript
var d = new Date();

if(d instanceof Date){
	...
}
}}}

`typeof`运算符：返回对象的类型信息
{{{JavaScript
var a = typeof "abc";
document.writeln(a);
}}}

`new`运算符：创建新的对象

`delete`运算符：删除变量或对象的属性，成功返回`true`，失败返回`false`（`JS`的核心属性和对象以及使用`var`声明的变量不能被删除）
----
===流程控制===

`JS`在支持所有常规的流程控制语句外，还有特殊的`for .. in`循环，用于遍历对象的属性
{{{JavaScript
var obj = new Object();
obj.name = "Ruchee";
obj.age = 22;

for(i in obj){
	document.writeln("obj." + i + " = " + obj[i]);
}
}}}

拥有异常处理结构：`try ... catch ... finnaly`
----
===内置对象===

# `Global`：全局对象。这是一种特殊的对象，实质上只是一个概念，由`JS`脚本引擎在初始化时创建
# `Object`：对象。可以用于创建一个通用的对象
# `Boolean`：布尔值对象。提供对布尔值的支持，可以创建一个`Boolean`对象
# `Date`：日期对象。提供与日期、时间相关的操作
# `String`：字符串对象。提供对字符串的支持
# `Number`：数字对象。提供对数字运算的支持
# `Array`：数组对象。提供对数组的支持
# `Function`：函数对象。用于声明函数
# `Math`：数学对象。提供一组数学常数的定义和数学函数，支持常用的数学运算
# `RegExp`：正则表达式对象。用于实现字符串的正则匹配
# `Error`：错误对象。提供对错误处理的支持
----
===this和with===

`this`关键字的两种功用：

# 在构造器函数中，指代新创建的对象实例
# 在对象的方法被调用时，指代调用该方法的对象实例

函数被当作普通函数调用时，该函数中的`this`关键字将指向`window`对象

`with`关键字有点像其他语言中的`using`，用以在特定情况下减少代码量

以下两代码段等价：
{{{JavaScript
/* 代码段1 */
var x = Math.cos(3 * Math.PI) + Math.sin(Math.LN10);
var y = Math.tan(14 * Math.E);

/* 代码段2 */
with(Math){
	var x = cos(3 * PI) + sin(LN10);
	var y = tan(14 * E);
}
}}}
----
<red>date</red> : 2012-02-20
----
