%title Lua虚拟机

[[../../../index|首页]] - [[../index|Lua]] - [[index|Base]]
==Lua虚拟机==
----
在交互式环境下，退出`Lua`解释器需要调用操作系统库的`exit`函数：`os.exit()`

`lua -i abc.lua`：<br>
解释器先运行完`abc.lua`中的程序块，然后再进入交互模式

`lua -e "print('Ruchee')"`：<br>
使用`-e`选项可以在命令行中直接键入代码

`lua -l abc`：<br>
加载指定的库文件

`lua -i -e "_PROMPT='ruchee>'"`：<br>
可以通过定义`_PROMPT`全局变量来自定义交互模式下的命令提示符，或者通过在交互式环境中执行`_PROMPT = 'ruchee>'`来修改

`dofile("abc.lua")`：<br>
在解释器中加载指定的文件，并立即执行

`=a`：<br>
在交互模式中可以使用等于号来快捷地打印某个变量的值，相当于`print(a)`
----
`Lua`通过全局变量`arg`来检索脚本的启动参数，类似于`C`语言的`argv`，但比`argv`更灵活

示例如下，其中`arg[0]`指代脚本文件名：<br>
`lua -e "print('Ruchee')" abc.lua a b`

# `arg[-3]`：lua
# `arg[-2]`：-e
# `arg[-1]`：print('Ruchee')
# `arg[0]`：abc.lua
# `arg[1]` ：a
# `arg[2]`：b
----
如果要使`Lua`源文件作为独立的程序运行，可在第一行做如下声明（以下形式都是可行的）：

# `#!/usr/bin/env lua`
# `#!/usr/bin/lua`
----
<red>date</red> : 2011-10-01、2012-01-24
----
