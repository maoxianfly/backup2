%title 列表

[[../../../index|首页]] - [[../index|Python]] - [[index|Base]]
==列表==
----
元素值不要求唯一，允许存在值相同的元素

支持负数索引和强大的切片分割

`li[-n] == li[len(li) - n]`，也就是说，如果一个列表有`5`个元素，则倒数第`2`个（顺数第`4`个）元素的索引既可以是`-2`，也可以是`5-2 == 3`

换句话说，同一个元素的正负索引绝对值之和等于该列表的元素个数
----
===几个特殊的切片===

# `li[:]`：列表拷贝
# `li[::-1]`：列表的翻转拷贝
# `li[:n] + li[n:]`：列表拷贝（`n`可以为任意值，甚至超出列表的索引范围也`OK`）
----
`列表推导式`和`生成器表达式`借鉴自`Haskell`语言，两者的写法类似

`列表推导式`使用方括号，而`生成器表达式`使用小括号，区别在于`生成器表达式`具有`惰性计算`的特点，具有潜在的节省内存的优点

# `列表推导式`：`data = [x for x in range(10) if x % 2 == 0]`
# `生成器表达式`：`data = (x for x in range(10) if x % 2 == 0)`
----
===列表常用操作===

* `li.index("Ruchee")`：获取元素值第一次出现在列表的位置
* `li.append("Ruchee")`：在列表末尾添加新元素
* `li.insert(n, "Ruchee")`：在指定下标处插入新元素
* `li.extend(li2)`：连接另外一个列表
* `li.remove("Ruchee")`：移除第一个匹配的元素值
* `li.pop()`：删除列表最后一个元素，并返回该元素的值
* `li.count("Ruchee")`：统计某元素值出现的次数
* `li.sort()`：列表排序（直接变更原列表）
* `li.reverse`：列表翻转（直接变更原列表）
----
<red>date</red> : 2012-04-13、2012-06-27、2012-08-15
----
