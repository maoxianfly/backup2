%title 正则表达式

[[../../../index|首页]] - [[../index|Python]] - [[index|Base]]
==正则表达式==
----
===基本元字符===

* `.`：`1`个（除换行符以外的任何单个字符）
* `?`：`0`或`1`个
* `+`：`1`或`N`个
* `*`：`0`或`N`个
* `|`：位于`|`之前或之后的字符
* `^`：字符串起始（或`\A`）
* `$`：字符串结束（或`\Z`）
* `[]`：位于`[]`中的任何一个字符（`^`出现在`[]`的最前面表示否定）
* `()`：将位于`()`中的内容当成一个整体
* `{}`：按`{}`中的次数进行匹配
----
===以\开头的元字符===

* `\b`：单词头或单词尾
* `\B`：与`\b`相反
* `\s`：任何空白字符
* `\S`：与`\s`相反
* `\d`：任何数字，相当于`[0-9]`
* `\D`：与`\d`相反
* `\w`：任何字母、数字、下划线，相当于`[a-zA-Z0-9_]`
* `\W`：与`\w`相反
----
===常用匹配===

* `.*`：匹配任意字符
* `[a-zA-Z0-9]`：任意字母或数字
* `{3,5}`：匹配`3`到`5`次
----
===相关函数===

* `re.match()`：匹配
* `re.search()`：查找
* `re.findall()`：查找所有，返回一个列表
* `re.sub()`：替换
* `re.split()`：分割，返回一个列表

`match()`、`search()`和`findall()`有两个常规参数和一个可选的第三参数，其中第三个参数可以选用以下选项，同时使用多个用`|`分隔

* `re.I`：忽略大小写
* `re.S`：使元字符`.`匹配换行符
* `re.U`：匹配`Unicode`字符
* `re.M`：多行匹配模式
* `re.X`：忽略匹配模式中的空格，并可以使用`*`注释

`sub()`有三个常规参数和一个可选的第四参数，这四个参数依次为 `正则模式`、`要替换的内容`、`进行替换的内容`、`最大替换次数`

`split()`有两个常规参数和一个可选的第三参数，这三个参数依次为 `正则模式`、`目标字符串`、`最大分割次数`
----
<red>date</red> : 2012-04-18、2012-10-18
----
