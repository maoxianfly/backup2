%title JSP基础

[[../../../index|首页]] - [[../index|Java]] - [[index|Java Web]]
==JSP基础==
----
===JSP基本原理===

在`<%`与`%>`标签之间可以放置任何合法的`Java`代码，这些代码都将在服务器端执行，返回的只是执行结果，然后嵌入在`HTML`中显示在浏览器中

`JSP`本质上是对`Servlet`的封装，服务器在解析`JSP`时会调用`JSP Parser`将其转换成`Servlet`，然后再调用`JSDK`将对应的`Servlet`编译成字节码

但如果这个`JSP`文件不是第一次被访问或不是被修改过，则服务器将直接执行之前访问生成的字节码，不需要再次编译
----
===JSP语法===

`JSP`语法分三种：编译器指令、脚本语法、动作语法

编译器指令的标签样式：`<%@`和`%>`，主要属性有`page`和`include`

`page`用于指定文档属性以及引入必要的`Java`包，`include`用于代码重用

`JSP`已经默认导入了下面这几个包，不需要再手动导入：

# `java.lang.*;`
# `javax.servlet.*;`
# `javax.servlet.jsp.*;`
# `javax.servlet.http.*;`

可以在一个页面中使用多个`<%@`、`%>`指令，但其中的属性只能使用一次，唯一的例外是`import`属性

示例`1`：`<%@ page language="java" import="java.util.*, java.io.*" pageEncoding="UTF-8" %>`

示例`2`：`<%@ include file="../footer.jsp" %>`

`JSP`的两种注释

# `< !-- HTML注释 -- >`：会发送到客户端浏览器（这儿为阻止注释标签生效，人为加入了空格）
# `<%-- JSP注释 --%>`：不会发送到浏览器

只要是用`<%`和`%>`包围的合法`Java`代码，就都会被`JSP`解析器解析到，就算其放在`< !--`与`-- >`之间也一样，如<br>
`< !-- <%= new java.util.Date() %> -- >`

因为`<%= Java代码 %>`标签会被`JSP`解析器解析成`out.print( Java代码 );`，所以这个标签间的`Java`代码不能有结尾的分号

`JSP`声明标签：`<%!`和`%>`，如 `<%! int a = 3; %>`

`<%! int a = 3; %>`和`<% int a = 3; %>`有本质的不同，前者生成的是类的成员变量，每次页面刷新都会保留下原来的值；而后者生成的是成员方法的变量，每次页面刷新会丢弃上次执行的结果

在需要声明变量的绝大多数情况下，并不使用声明标签，而是使用普通的脚本段，这是因为`Servlet`是单实例的，多个客户访问时会使得`成员变量`的值受到干扰，容易出现数据不同步的现象，而使用`局部变量`则可以使得多个变量互不干扰
----
<red>date</red> : 2012-02-22、2012-02-23、2012-02-24
----
