%title HTTP协议

[[../../../index|首页]] - [[../index|Java]] - [[index|Java Web]]
==HTTP协议==
----
===基础知识===

`HTTP`有常见的两个版本，`HTTP 1.0`和`HTTP 1.1`

`HTTP 1.1`默认是采用持续连接的，不会向`HTTP 1.0`一样请求一次就连接一次
----
===HTTP URL===

基本格式：`http://Host[:Port][abs_path]`

# `http`：协议名
# `Host`：合法的`Internet`主机域名或`IP`地址
# `Port`：指定服务器端口号，默认为`80`
# `abs_path`：所请求资源的`URI`（统一资源标识符）
----
===HTTP请求===

客户端通过发送`HTTP`请求向服务器请求对资源的访问

`HTTP`请求由`请求行`、`消息报头`、`请求正文`三部分组成

请求行：`Method Request-URI HTTP-Version`，如 `GET /index.html HTTP/1.1`

请求方法用的最多的是`GET`和`POST`，`POST`可以附带数据
----
===get与post的区别===

表单的提交有`get`和`post`两种方式，默认为`get`方式：`<form method="get"></form>`

使用`post`方法不会在浏览器地址栏中显示出表单所填写的内容

`get`与`post`最本质的区别在于，`get`把表单信息附加到了`URL`里，而`post`则把表单信息当成了请求内容

通过浏览器地址栏输入网址的方式来访问服务器端资源，全部使用的是`get`方法，没有例外

因为浏览器对`URL`长度有限制，所以对于上传文件等操作，必须使用`post`

考虑到安全性，一般在开发中优先选用`post`方法
----
===HTTP响应===

在接收和解释请求消息后，服务器返回一个`HTTP`响应消息

`HTTP`响应由`状态行`、`消息报头`、`响应正文`三部分组成

状态行：`HTTP-Version Status-Code Reason-Phrase`，如 `HTTP/1.1 200 OK`
----
===HTTP响应状态码===

状态码由三位数字组成，表示请求是否被理解或被满足

# `1xx`：提示信息，表示请求已接收，继续处理
# `2xx`：成功，表示请求已被成功接收、理解和接受，常见的是`200`
# `3xx`：重定向，表示要完成请求还须进行更进一步的操作
# `4xx`：客户端错误，请求有语法错误或请求无法实现，常见的是`404`
# `5xx`：服务器端错误，服务器未能实现合法的请求，常见的是`500`

常见状态码及其含义：

| <center>状态码</center> | <center>状态描述</center> | <center>含义说明</center>                            |
| 200                     | OK                        | 客户端请求成功                                       |
| 400                     | Bad Request               | 客户端请求有语法错误，服务器无法理解                 |
| 401                     | Unauthorized              | 请求未经授权                                         |
| 403                     | Forbidden                 | 服务器收到了请求，但拒绝提供服务                     |
| 404                     | Not Found                 | 所请求的资源不存在                                   |
| 500                     | Internal Server Error     | 服务器发生不可预期的错误，导致无法完成客户请求       |
| 503                     | Service Unavailable       | 服务器暂时不能处理客户端请求，过段时间才可能恢复正常 |
----
<red>date</red> : 2012-02-01、2012-02-22
----
