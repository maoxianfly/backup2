%title CSS基础

[[../../../index|首页]] - [[../index|Java]] - [[index|Java Web]]
==CSS基础==
----
===预备知识===

样式表的优先级（从高到低）：

# 标签内书写的`行内样式`
# 当前文件里面定义的`内部样式`
# 引入进来的`外部样式`
# 浏览器默认规则

行内样式：`< p style="text-align: center; color: red" > </ p >`

内部样式：`< style type="text/css" > CSS代码 </ style >`

外部样式（`rel`属性不能省略）：`< link rel="stylesheet" type="text/css" href="test.css" >`
----
===编码基础===

`CSS`基本组成：`选择器`、`属性`、`值`，如 `body {color: black}`

`CSS`注释和`C/C++/Java`的多行注释一致，如 `/* CSS注释 */`

如果值由多个单词组成，则需要用双引号括起，如 `p {font-family: "sans serif"}`

多个属性使用分号间隔（可以每个属性一行，但分号不能省略），如 `p {text-align: center; color: red}`

多个标签使用同一样式，使用逗号分隔，如 `h1, h2, h3 {color: green}`
----
===规则详解===

`1`、`类选择器`

通过 `.` 号来选择性渲染有`class`标识的元素，每一个`HTML`元素最多只能有一个`class`属性，如 `p.cat {text-align: center}`

`类选择器`可以没有标签名，这将匹配所有`class`属性和选择器名一致的元素，如 `.cat {text-align: center}`

`2`、`id选择器`

通过 `#` 号来选择性渲染有`id`标识的元素，通常在每一个`HTML`页面中不应有重复的`id`，如 `p#cat {color: red}`

`id选择器`同样也可以没有标签名，这将匹配所有`id`属性和选择器名一致的元素，如 `#cat {color: red}`

3、`链接样式`

对于`< a > </ a >`标签，有四种不同的形态：

# `a:link`：链接还没有任何操作的时候
# `a:hover`：鼠标放在链接上面的时候
# `a:active`：鼠标点击了链接，但还没有松开的时候
# `a:visited`：链接已经被访问过的时候
----
<red>date</red> : 2012-01-31
----
