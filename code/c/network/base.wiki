%title 网络编程基础

[[../../../index|首页]] - [[../index|C]] - [[index|Network]]
==网络编程基础==
----
===基本名词解释===

`IP`：网际协议

`TCP`：传输控制协议

`UDP`：用户数据报协议

`IPv4`：地址长度`32`位，写成`4`个十进制一组的形式，中间用点号分隔

`IPv6`：地址长度`128`位，写成`8`个十六进制一组的形式，中间用冒号分隔，前导零可省略

`端口号`：`16`位无符号二进制数字，范围在`1-65535`之间

`回送地址`：`IPv4`是`127.0.0.1`，`IPv6`是`0:0:0:0:0:0:1`或写成`::1`
----
===默认端口===

| HTTP   | 80     |
| SMTP   | 25     |
| SNMP   | 161    |
| FTP    | 21     |
| DNS    | 53     |
----
===基础知识===

`IP`是`TCP/IP`协议族中唯一的网络层协议，其使得任意两台主机之间的信道和路由器序列看起来像是主机到主机之间的单独一条信道

`IP`是一种“尽力而为”的协议，其尝试递送每个分组，但不保障中途有可能发生的`丢失`、`重排`或`重复`

传输层有`TCP`和`UDP`两种选择，它们都构建于`IP`提供的服务之上，两者的共同功能是`寻址`

`TCP`和`UDP`使用地址，也就是端口号来确定主机内的应用程序，也被称为“`端到端传输协议`”，它们自始至终把数据从一个程序运送到另一个程序

`IP`则把数据从一台主机运送到另一台主机

`TCP`是面向连接的协议，两应用程序进行通信前必须先建立一条`TCP`连接，它提供可靠的`字节流`服务

`UDP`提供的是`不可靠`的字节流，所以使用`UDP`的应用程序必须自行处理`分组丢失`、`重新排序`等问题

`套接字`是一个抽象层，`套接字通信`就相当于`文件读取`，由一台机器上的应用程序写入套接字的信息可以被不同机器上的其他应用程序读取

`TCP/IP`中主要的套接字类型是`流套接字`（`TCP`）和`数据报套接字`（`UDP`），`TCP/IP`套接字由`Internet`地址、端到端协议和端口号唯一标识

一个程序可以使用多个套接字，一个套接字抽象层也可以同时被多个程序使用，但后一种情形并不多见
----
<red>date</red> : 2011-12-27
----
