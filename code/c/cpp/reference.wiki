%title 引用（reference）

[[../../../index|首页]] - [[../index|C/C++]] - [[index|C++]]
==引用（reference）==
----
===常规用法===

`引用`是`C++`相对`C`而言特有的一种语法，就相当于对象或变量的一个别名，使用取址操作符（`&`），实际应用中主要用作函数的形式参数

`引用`是一种复合类型，可以定义任何其他类型的引用，但不能定义引用的引用

`引用`与其被引用对象必须是相同的类型，且在定义的同时必须进行初始化，也就是指定`引用`变量绑定哪个对象

绑定对象必须是合法变量名，不能是直接的数值或字符、字符串等

典型的引用示例
# `int &refVal = val;`：正确
# `int &refVal;`：错误，必须在定义的同时初始化
# `int &refVal = 3;`：错误，绑定对象必须是合法变量名

这种别名的绑定，从其被初始化起，就不能再解绑，更不能更改绑定对象，可谓“`终生制`”

如果对`引用`添加`const`修饰符，那么就不能通过该`引用`变量修改绑定对象的值了，只能读取，但对绑定对象本身没有影响

如果绑定对象本身是用`const`修饰的，那么定义该绑定对象的`引用`时也必须加上`const`修饰符
----
===例外情况===

在`引用`变量使用了`const`修饰符的情况下，绑定对象可以为直接的数值、字符、字符串等，如 `const char &refVal = 'A';`

而且，`const引用`的绑定对象类型和`const引用`本身的类型可以不同，如 `int val = 65;`、`const char &refVal = val;`
----
<red>date</red> : 2012-03-31
----
