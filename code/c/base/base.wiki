%title 基础拾遗

[[../../../index|首页]] - [[../index|C]] - [[index|Base]]
==基础拾遗==
----
===源代码处理===

# `预处理`：源代码首先交由`预处理器`处理，其执行以`#`开头的指令
# `编译`：`编译器`会将经预处理过的代码翻译成机器指令，生成目标代码
# `链接`：由`链接器`将目标代码和所需的其他附加代码整合到一起，生成最终的可执行程序
----
===函数===

`main`函数中`return 0;`的作用有二：一是使`main`函数终止，从而结束程序的运行；二是指出`main`函数的返回值是`0`

`EOF`指代文件结尾，也就是`end of file`

`printf`格式符详解：

# `%d`或`%i`：以十进制形式输出带符号整数（正数不输出符号）
# `%c`：输出单个字符
# `%f`：以小数形式输出单、双精度浮点数
# `%e`：以指数形式输出单、双精度浮点数（使用小写`e`）
# `%E`：作用同`%e`，但输出的是大写`E`
# `%g`：从`%f`和`%e`中选宽度最短的输出单、双精度浮点数
# `%G`：作用同`%g`，但如果输出结果为指数形式，则使用大写`E`
# `%s`：输出字符串
# `%o`：以八进制形式输出无符号整数（不输出前缀`0`）
# `%x`：以十六进制形式输出无符号整数（不输出前缀`0x`）
# `%X`：作用同`%x`，但使用`A`、`B`、`C`、`D`、`E`、`F`等大写字母
# `%u`：以十进制形式输出无符号整数
# `%p`：输出地址数据（指针类型）
# `%%`：输出百分号本身
# `-`：输出结果左对齐，右边以空格填充（默认是右对齐，左边填空格）
# `+`：对输出结果添加正负号
# `#`：对于八进制和十六进制数据，输出前缀符号`0`和`0x`，同时对于`%g`、`%G`格式符，还能保证一定输出小数点
# `h`：按短整型量输出
# `l`：按长整型量输出

`scanf`格式符详解：

# `%d`：输入十进制整数
# `%c`：输入单个字符
# `%f`或`%e`：输入浮点数（包括小数形式和指数形式）
# `%s`：输入字符串
# `%o`：输入八进制整数
# `%x`：输入十六进制整数
# `%u`：输入无符号十进制整数
# `*`：将当前格式符所对应的输入数据及这个格式符本身忽略掉，转而处理下一个格式符和下一个输入数据
# `h`：按短整型量获取输入
# `l`：按长整型量获取输入
# `数字`：按指定宽度截取输入值，要注意的是只允许截取，不允许进行精度控制，也就是说这个数字不能是小数
----
===注释===

对于注释的处理，`C`标准规定，必须使用一个空格来进行替换。所以，`a/*xxx*/b`将预处理成`a b`，而不是`ab`

多行注释`/**/`不能嵌套使用，如需嵌套，应在内层使用单行注释`//`（`C99`支持）
----
===变量===

`float`型可以存储小数，但进行算术运算时通常比`int`型慢，而且其所存储的数值往往只是实际数值的一个近似值

在将一个小数赋值给`float`型变量时，最好在该数值的后面加上一个小写的`f`，如：`float a = 3.14f`（但给`double`型变量赋小数不需要加后缀）

旧`C`标准要求变量声明必须放在所有语句之前，但`C99`没有了这个限制（`GCC`在不开`C99`选项的情况下默认可以正常编译，但`VC6`和`VS2008`不行）
----
<red>date</red> : 2012-01-04、2012-01-29、2012-02-14
----
