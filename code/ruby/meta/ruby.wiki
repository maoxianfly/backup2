%title Ruby精要

[[../../../index|首页]] - [[../index|Ruby]] - [[index|Meta]]
==Ruby精要==
----
===类和对象===

`Ruby`的类全部是开放的，允许任意的扩展和改写，就连其内置的标准库也不例外：这正是`Ruby`拥有超能力的原因所在，也是`元编程`的根基所在（这方面`Lisp`表现得更为彻底）

此外，`单件方法`的存在，更是大大提高了`Ruby`的灵活性，这让`Ruby`编程变得更加随心所欲

但随心所欲是有代价的，由于可以随意修改类实现，这很容易就会改写掉已有的方法，导致其他依赖该方法的代码出错，这也就是`猴子补丁`一词的来源

`Ruby`中，类也有自己的类，名字就叫`Class`，所有的类都最终继承于`Object`，而`Object`又继承于`BasicObject`，`BasicObject`是`Ruby`对象体系的根节点

# `Class.instance_methods(false) == [:allocate, :new, :superclass]`
# `Class.superclass == Module`
# `Module.superclass == Object`

上述三个事实表明，`Ruby`中，`Class`是继承于`Module`的，也就是说类只不过是一个增添了三个方法的模块，而普通的模块没有这三个方法所以无法创建实例

这也表明，类和模块的差别也就在于有无这三个方法，其他方面几乎没有差别，适用于类的内容也同样适用于模块，反之亦然
----
<red>date</red> : 2012-10-08
----
